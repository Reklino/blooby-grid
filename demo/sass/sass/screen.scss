/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */

@import "compass/reset";
@import "compass/css3/selection";
@import "compass/css3/transform";
@import "compass/css3/transition";
@import "susy";

/*============================
=            Vars            =
============================*/

$body: #525560;
$header: #303536;
$background: #FFF;
$primary: #23f0c7;

$serif: "freight-text-pro",sans-serif;
$sans-serif: "freight-sans-pro", sans-serif;

$default-transition-duration: 0.3s;
$default-transition-function: cubic-bezier(.3,.53,0,1);

$line: 28px;
$line-int: 28;

$font-size: 20;
$em: $font-size * 1;

/*
*
*   Zoomable baseline grid
*   type size presets
*
*/

body {
    /* 20px / 28px */
    font-size: $font-size / 16 * 1em;
    line-height: #{$line-int / $em}em;
}

@mixin small {
    /* 13px / 18px */
    font-size: #{($font-size*0.8125) / $em}em;
    line-height: ($line-int*0.75) / ($font-size*0.8125) * 1em;
}
@mixin normal {
    /* 20px / 28px */
    font-size: #{$font-size / $em}em;
    line-height: #{$line-int / $em}em; /* 28 */
}

@mixin large {
    /* 32 / 36px */
    font-size: #{32 / $em}em;
    line-height: ($line-int*1.5) / 32 * 1em;
}

@mixin huge {
    /* 52px / 48px */
    font-size: #{52 / $em}em;
    line-height: ($line-int*2) / 52 * 1em;
}

@mixin massive {
    /* 84px / 72px */
    font-size: #{84 / $em}em;
    line-height: ($line-int*3) / 84 * 1em;
}

@mixin gigantic {
    /* 135px / 120px */
    font-size: #{135 / $em}em;
    line-height: ($line-int*5) / 135 * 1em;
}


/*-----  End of Vars  ------*/


/*==================================
=            Typography            =
==================================*/

* {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
}
body {
	font-family: $sans-serif;
	font-style: normal;
	font-weight: 400;
	background: $background;
	color: $body;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.004);
    text-rendering: optimizeLegibility !important;
    -webkit-font-smoothing: antialiased !important;
}

* { @include selection(darken($primary, 10), #fff) }

.italic {
    font-style: italic;
    color: $primary;
}

h1, h2, h3, h4, h5, h6 { font-weight: 700; color: $header; font-family: $serif; }
h1 {
    font-weight: 700;
	@include gigantic;
	margin-bottom: $line*2;
}
h2 {
	@include massive;
	margin-bottom: $line;
}
h3 {
	@include huge;
	margin-bottom: $line*1.5;
}
h4 {
	@include large;
	margin-bottom: $line/2;
}
h5 {
	@include normal;
	margin-bottom: $line/2;
}
h6 {
	@include small;
	line-height: $line;
	margin-bottom: $line;
}

p {
	line-height: $line;
    margin-bottom: $line;
}

a {
    @include transition;
    text-decoration: none;
    color: darken($primary, 15);
    &:hover {
        color: darken($primary, 45);
    }
}

ul {
    list-style: circle;
}
li {
    line-height: $line;
    margin-left: 1.2em;
}

hr {
    display: block;
    border: 1px solid lighten($body, 50);
    border-width: 1px 0 0 0;
    width: 150px;
    height: $line;
    margin: $line auto 0;
}

.subtle {
    h1, h2, h3, h4, h5, h6 { color: lighten($header, 20); }
    &, p { color: lighten($body, 20); }
}

.sub {
    font-family: $sans-serif;
    font-weight: 300;
    color: lighten($body, 25);
}

.clear-left { clear: left; }
.clear-right { clear: right; }

.clearfix {
    &:after {
        content:'';
        display: block;
        clear: both;
    }
}

.pull-right {
    float: right !important;
}

.center { text-align: center !important; }

/*-----  End of Typography  ------*/


/*===========================================
=            Base Element Styles            =
===========================================*/

pre {
    float: left;
    width: 100%;
    white-space: pre-wrap;
    font-size: 1em;
    line-height: $line;
    color: lighten($primary, 15);
    box-shadow: inset 0 0 0 -1px darken($header, 25);
    background: $header;
    padding: $line/2 1em;
    margin: 0;
    border-radius: 10px;
}

.number {
    color: lighten($header, 50);
}

.add-bottom { margin-bottom: $line !important; }
.add-top { margin-top: $line !important; }

/*-----  End of Base Element Styles  ------*/




/*==============================
=            Layout            =
==============================*/

nav {
    font-family: $sans-serif;
    color: lighten($body, 25);
    height: $line*2;
    ul {
        list-style: none;
        display: none;
    }
    li { margin: 0 3em 0 0; }
}
nav.active ul {
    position: absolute;
    display: block;
    padding: $line*1.25 0 $line/2 1.5em;
    margin-top: .25em;
    margin-left: -0.75em;
    width: 160px;
    background: white;
    border: 1px solid $body;
    li { display: block; line-height: $line*1.5; }
}
#nav-trigger { display: block; }

@media (min-width: 1100px) {
    nav ul, nav.active ul {
        display: block;
        position: relative;
        padding: 0;
        margin: 0;
        width: auto;
        border: none;
        li { display: inline; line-height: $line*2; }
    }
    #nav-trigger {
        display: none;
    }
}

header {
    padding: $line*4 0 $line;
}

.section-title {
    font-weight: 500;
    font-family: $sans-serif;
    font-size: 42px;
    margin-top: $line*2;
    color: $body;
    .col-12 {
        position: relative;
    }
    span {
        position: relative;
        z-index: 1;
        height: $line*2;
        line-height: $line*2;
        text-shadow: -1px 0 white, 1px 0 white;
    }
    span:after {
        content: '';
        position: absolute;
        z-index: -1;
        display: block;
        margin-top: -4px;
        height: 1px;
        width: 100%;
        background: $body;
    }
}

section {
    padding: $line*2 0 $line;
}

footer {
    text-align: center;
    background: lighten($body, 62);
    padding: $line*3 0 $line*1;
    margin-top: $line;
    .col-3 { margin-bottom: $line; }
    .col-12 { margin: $line 0; }
}

/*-----  End of Layout  ------*/


/*================================
=            Nav Icon            =
================================*/

.menu-icon {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -o-user-select: none;
    user-select: none;
    z-index: 1;
    cursor: pointer;
    position: absolute;
    margin-top: 20px;
    width: 14px;
    height: 14px;
    span {
        position: relative;
        display: block;
        width: 18px;
        height: 2px;
        background-color: $body;
        @include transition;
        &:first-of-type {
            top: -3px;
        }
        &:last-of-type {
            bottom: -3px;
        }
    } // span
    // Active state for the menu
    &.active span {
        @include transition;
        &:first-of-type {
            @include transform(rotate(45deg));
            top: 1px;
        }
        &:last-of-type {
            @include transform(rotate(-45deg));
            bottom: 1px;
        }
    } // active
} // menu-icon

/*-----  End of Nav Icon  ------*/




/*============================
=            Logo            =
============================*/

#logo {
    float: left;
    position: relative;
    z-index: 2;
    height: $line*2;
    padding-top: 8px;
    cursor: pointer;
    margin-right: 2em;
}

$palette: (
  0: transparent, 
  1: #fff, 
  2: #0071b5,
  3: $body
);

$pixel_size: 2px;

$ghost: 
    0 0 0 0 0 3 3 3 3 0 0 0 0 0,
    0 0 0 3 3 3 3 3 3 3 3 0 0 0,
    0 0 3 3 3 3 3 3 3 3 3 3 0 0,
    0 3 1 1 3 3 3 3 1 1 3 3 3 0,
    0 1 1 1 1 3 3 1 1 1 1 3 3 0,
    0 2 2 1 1 3 3 2 2 1 1 3 3 0,
    3 2 2 1 1 3 3 2 2 1 1 3 3 3,
    3 3 1 1 3 3 3 3 1 1 3 3 3 3,
    3 3 3 3 3 3 3 3 3 3 3 3 3 3,
    3 3 3 3 3 3 3 3 3 3 3 3 3 3,
    3 3 3 3 3 3 3 3 3 3 3 3 3 3,
    3 3 3 3 3 3 3 3 3 3 3 3 3 3,
    3 3 0 3 3 3 0 0 3 3 3 0 3 3,
    3 0 0 0 3 3 0 0 3 3 0 0 0 3,
;

$ghost2: 
    0 0 0 0 0 2 2 2 2 0 0 0 0 0,
    0 0 0 2 2 2 2 2 2 2 2 0 0 0,
    0 0 2 2 2 2 2 2 2 2 2 2 0 0,
    0 2 2 2 2 2 2 2 2 2 2 2 2 0,
    0 2 2 2 2 2 2 2 2 2 2 2 2 0,
    0 2 2 2 1 1 2 2 1 1 2 2 2 0,
    0 2 2 2 1 1 2 2 1 1 2 2 2 0,
    2 2 2 2 2 2 2 2 2 2 2 2 2 2,
    2 2 2 2 2 2 2 2 2 2 2 2 2 2,
    2 2 1 1 2 2 1 1 2 2 1 1 2 2,
    2 1 2 2 1 1 2 2 1 1 2 2 1 2,
    2 2 2 2 2 2 2 2 2 2 2 2 2 2,
    2 2 2 2 0 2 2 2 2 0 2 2 2 2,
    0 2 2 0 0 0 2 2 0 0 0 2 2 0,
;

@function px($val) {
    @return $val * $pixel_size;
}
@function get_width($pixels) {
    @return length(nth($pixels, 1));
}
@function get_height($pixels) {
    @return length($pixels);
}
@function render_pixels($pixels, $width, $height) {
    $out: ();
    $y: 1;

    @for $row from 1 through $height {
        @for $x from 1 through $width {
            @if $x % $width < 1 {
                @if $y < length($pixels) {
                    $y: $y + 1;
                }
            }
            $row_pixels: nth($pixels, $y);
            $color: map-get($palette, nth($row_pixels, $x));
            $out: join(append((), px($x) px($y) 0 $color, comma), $out);
        }
    }
    @return $out;
}

.canvas {
    position: relative;
    background: transparent;
    transition: background .2s ease;
    margin-bottom: $pixel_size;
    float: left;

    &::after {
        width: $pixel_size;
        height: $pixel_size;
        background: transparent;
        position: absolute;
        left: -$pixel_size;
        top: -$pixel_size;
        content: '';
    }
}
#ghost1 {
    width: px(get_width($ghost));
    height: px(get_height($ghost));
    background: white;
  
    &:hover {
        opacity: 0;
    }
  
    &::after {
        box-shadow: render_pixels(
          $ghost, 
          get_width($ghost), 
          get_height($ghost)
        );
    }
}
#ghost2 {
    position: absolute;
    width: px(get_width($ghost2));
    height: px(get_height($ghost2));
  
    &::after {
        box-shadow: render_pixels(
          $ghost2, 
          get_width($ghost2), 
          get_height($ghost2)
        );
    }
}

/*-----  End of Logo  ------*/




/*=================================
=            Prism CSS            =
=================================*/

code[class*="language-"],
pre[class*="language-"] {
    color: #f8f8f2;
    direction: ltr;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;

    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;

    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
    overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
    background: #272822;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
    padding: .1em;
    border-radius: .3em;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
    color: slategray;
}

.token.punctuation {
    color: #f8f8f2;
}

.namespace {
    opacity: .7;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
    color: #f92672;
}

.token.boolean,
.token.number {
    color: #ae81ff;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
    color: #a6e22e;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
    color: #f8f8f2;
}

.token.atrule,
.token.attr-value,
.token.function {
    color: #e6db74;
}

.token.keyword {
    color: #66d9ef;
}

.token.regex,
.token.important {
    color: #fd971f;
}

.token.important,
.token.bold {
    font-weight: bold;
}
.token.italic {
    font-style: italic;
}

.token.entity {
    cursor: help;
}

/*-----  End of Prism CSS  ------*/



